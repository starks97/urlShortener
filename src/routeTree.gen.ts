/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthRefreshImport } from './routes/auth/refresh'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthedProfileImport } from './routes/_authed/profile'
import { Route as AuthedDashboardIndexImport } from './routes/_authed/dashboard/index'
import { Route as AuthedDashboardCreateshorturlImport } from './routes/_authed/dashboard/create_short_url'
import { Route as AuthedDashboardUrlidImport } from './routes/_authed/dashboard/$url_id'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthRefreshRoute = AuthRefreshImport.update({
  path: '/auth/refresh',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthedProfileRoute = AuthedProfileImport.update({
  path: '/profile',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedDashboardIndexRoute = AuthedDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedDashboardCreateshorturlRoute =
  AuthedDashboardCreateshorturlImport.update({
    path: '/dashboard/create_short_url',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedDashboardUrlidRoute = AuthedDashboardUrlidImport.update({
  path: '/dashboard/$url_id',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/profile': {
      id: '/_authed/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileImport
      parentRoute: typeof AuthedImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/refresh': {
      id: '/auth/refresh'
      path: '/auth/refresh'
      fullPath: '/auth/refresh'
      preLoaderRoute: typeof AuthRefreshImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authed/dashboard/$url_id': {
      id: '/_authed/dashboard/$url_id'
      path: '/dashboard/$url_id'
      fullPath: '/dashboard/$url_id'
      preLoaderRoute: typeof AuthedDashboardUrlidImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/dashboard/create_short_url': {
      id: '/_authed/dashboard/create_short_url'
      path: '/dashboard/create_short_url'
      fullPath: '/dashboard/create_short_url'
      preLoaderRoute: typeof AuthedDashboardCreateshorturlImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/dashboard/': {
      id: '/_authed/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedProfileRoute: typeof AuthedProfileRoute
  AuthedDashboardUrlidRoute: typeof AuthedDashboardUrlidRoute
  AuthedDashboardCreateshorturlRoute: typeof AuthedDashboardCreateshorturlRoute
  AuthedDashboardIndexRoute: typeof AuthedDashboardIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedProfileRoute: AuthedProfileRoute,
  AuthedDashboardUrlidRoute: AuthedDashboardUrlidRoute,
  AuthedDashboardCreateshorturlRoute: AuthedDashboardCreateshorturlRoute,
  AuthedDashboardIndexRoute: AuthedDashboardIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/profile': typeof AuthedProfileRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/refresh': typeof AuthRefreshRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/$url_id': typeof AuthedDashboardUrlidRoute
  '/dashboard/create_short_url': typeof AuthedDashboardCreateshorturlRoute
  '/dashboard': typeof AuthedDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/profile': typeof AuthedProfileRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/refresh': typeof AuthRefreshRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/$url_id': typeof AuthedDashboardUrlidRoute
  '/dashboard/create_short_url': typeof AuthedDashboardCreateshorturlRoute
  '/dashboard': typeof AuthedDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/profile': typeof AuthedProfileRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/refresh': typeof AuthRefreshRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_authed/dashboard/$url_id': typeof AuthedDashboardUrlidRoute
  '/_authed/dashboard/create_short_url': typeof AuthedDashboardCreateshorturlRoute
  '/_authed/dashboard/': typeof AuthedDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/profile'
    | '/auth/login'
    | '/auth/refresh'
    | '/auth/register'
    | '/dashboard/$url_id'
    | '/dashboard/create_short_url'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/profile'
    | '/auth/login'
    | '/auth/refresh'
    | '/auth/register'
    | '/dashboard/$url_id'
    | '/dashboard/create_short_url'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/profile'
    | '/auth/login'
    | '/auth/refresh'
    | '/auth/register'
    | '/_authed/dashboard/$url_id'
    | '/_authed/dashboard/create_short_url'
    | '/_authed/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRefreshRoute: typeof AuthRefreshRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRefreshRoute: AuthRefreshRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/auth/login",
        "/auth/refresh",
        "/auth/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/profile",
        "/_authed/dashboard/$url_id",
        "/_authed/dashboard/create_short_url",
        "/_authed/dashboard/"
      ]
    },
    "/_authed/profile": {
      "filePath": "_authed/profile.tsx",
      "parent": "/_authed"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/refresh": {
      "filePath": "auth/refresh.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/_authed/dashboard/$url_id": {
      "filePath": "_authed/dashboard/$url_id.tsx",
      "parent": "/_authed"
    },
    "/_authed/dashboard/create_short_url": {
      "filePath": "_authed/dashboard/create_short_url.tsx",
      "parent": "/_authed"
    },
    "/_authed/dashboard/": {
      "filePath": "_authed/dashboard/index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
